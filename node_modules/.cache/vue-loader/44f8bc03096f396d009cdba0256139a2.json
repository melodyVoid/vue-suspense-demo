{"remainingRequest":"/Users/botao/practice/vue-next-sample/node_modules/vue-loader/dist/index.js??ref--0-1!/Users/botao/practice/vue-next-sample/src/components/Promised.vue?vue&type=template&id=2c888de3&scoped=true","dependencies":[{"path":"/Users/botao/practice/vue-next-sample/src/components/Promised.vue","mtime":1588833167517},{"path":"/Users/botao/practice/vue-next-sample/node_modules/cache-loader/dist/cjs.js","mtime":1581260775199},{"path":"/Users/botao/practice/vue-next-sample/node_modules/thread-loader/dist/cjs.js","mtime":1581260775242},{"path":"/Users/botao/practice/vue-next-sample/node_modules/babel-loader/lib/index.js","mtime":1585232343745},{"path":"/Users/botao/practice/vue-next-sample/node_modules/vue-loader/dist/templateLoader.js","mtime":1588819138569},{"path":"/Users/botao/practice/vue-next-sample/node_modules/cache-loader/dist/cjs.js","mtime":1581260775199},{"path":"/Users/botao/practice/vue-next-sample/node_modules/vue-loader/dist/index.js","mtime":1588819138569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICAgIFByb21pc2VkCiAgICA8c2xvdCBuYW1lPSJlcnJvciIgdi1pZj0iZXJyIj57eyBlcnIgfX08L3Nsb3Q+CiAgICA8c2xvdCBuYW1lPSJsb2FkaW5nIiB2LWVsc2UtaWY9ImxvYWRpbmciPjwvc2xvdD4KICAgIDxzbG90IG5hbWU9ImRlZmF1bHQiIDp1c2VyPSJ1c2VyIiB2LWVsc2U+PC9zbG90PgogIDwvZGl2Pgo="},{"version":3,"sources":["/Users/botao/practice/vue-next-sample/src/components/Promised.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA","file":"/Users/botao/practice/vue-next-sample/src/components/Promised.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    Promised\n    <slot name=\"error\" v-if=\"err\">{{ err }}</slot>\n    <slot name=\"loading\" v-else-if=\"loading\"></slot>\n    <slot name=\"default\" :user=\"user\" v-else></slot>\n  </div>\n</template>\n<script>\nimport { defineComponent, onMounted, ref } from 'vue'\nexport default defineComponent({\n  props: {\n    promise: {\n      type: Function,\n    },\n  },\n  setup(props) {\n    const loading = ref(false)\n    const err = ref(null)\n    const user = ref([])\n    \n    onMounted(async () => {\n      try {\n        loading.value = true\n        const list = await props.promise()\n        user.value = list\n      } catch (error) {\n        console.log(error)\n        err.value = error\n      } finally {\n        loading.value = false\n      }\n    })\n\n    return {\n      loading,\n      err,\n      user,\n    }\n  },\n})\n</script>\n<style lang=\"scss\" scoped>\n</style>"]}]}